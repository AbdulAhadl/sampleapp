pipeline{
    agent any
    environment{
        dockertag = getDockerTag()
    }
    stages{
        stage("docker build"){
            steps{
                sh "docker build  . -t  ahadwaqar/development:${dockertag} "
            }
        }
        stage("docker push"){
            steps{
                withCredentials([string(credentialsId: 'ahadwaqar', variable: 'DockerHub')]) {
                    sh 'docker login -u ahadwaqar -p ${DockerHub}'
                    sh 'docker push  ahadwaqar/development:${dockertag}'
                }
                
            }
        }
        stage("Deploy_to_cluster"){
            steps{
                sh "chmod +x nodeapp.sh"
                sh "./nodeapp.sh ${dockertag}"
                sshagent(['kubenest']) {
                    sh "scp -o StrictHostKeyChecking=no pod.yml node-app.yml root@52.47.152.125:/" 
                    script{
                        try{
                            sh "ssh root@172.32.39.20 kubectl apply -f ."
                        }
                        catch(error){
                            sh "ssh root@172.32.39.20 kubectl apply -f ."
                        }
                    }
                }
            }
        }
    }
} 
def getDockerTag(){
    def DockerTag = sh script: 'git rev-parse HEAD',returnstrout:true
    return DockerTag

}